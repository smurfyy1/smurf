t = 0:0.01:10;
y = 4 + 4 * sin(t);
subplot(3,1,1);
plot(t, y);
xlabel('Time');
ylabel('Amplitude');
title('Information Signal');
grid on;
L = 8;
ymin = round(min(y));
ymax = round(max(y));
codebook = linspace(ymin, ymax, L);
quant_level = linspace(ymin, ymax, L - 1);
[index, Quants] = quantiz(y, quant_level, codebook);
subplot(3,1,2);
plot(t, Quants);
xlabel('Time');
ylabel('Amplitude');
title('Quantized Signal (L = 8)');
grid on;
R = [];
Quant_Level = [];
for n = 2:8
    L = n^2;
    Quant_Level = [Quant_Level, L];
    codebook = linspace(ymin, ymax, L);
    quant_level = linspace(ymin, ymax, L - 1);
    [index, Quants] = quantiz(y, quant_level, codebook);
    noise = y - Quants;
    r = snr(y, noise);
    R = [R, r];
end
subplot(3,1,3);
plot(Quant_Level, R, 'r*--');
xlabel('Number of Quantization Levels');
ylabel('SNR (dB)');
title('SNR vs Quantization Level');
grid on;



sig=[];
time=[];
n=input('Enter the number of bits to be transmitted='); d=input('Enter the roll off factor=');
snr=input('Enter the SNR value=');
% Generate random bits b=randi([0,1],1,n);
% Convert bits into bitstream for i=1:length(b)
sig=[sig (b(i)==1)*ones(1,100)];
end
% Signal representation using rasined cosine pulse t=0:0.01:n-0.01;
TSIG=zeros(1,length(t)); for i=1:length(b)
if b(i)==1
A=(sinc((t-(i-1))).*cos(pi*d*(t-(i-1))))./(1-(4*d^2*((t-(i-1)).*(t- (i-1)))));
else
A=(-1)*(sinc((t-(i-1))).*cos(pi*d*(t-(i-1))))./(1-(4*d^2*((t-(i- 1)).*(t-(i-1)))));
end TSIG=TSIG+A;
end
% Transmit signal through an AWGN channel NTSIG=awgn(TSIG,snr);
subplot(4,1,1);
plot(t,sig);
axis([0 t(1000) -1 2]);
xlabel('time'); ylabel('Amplitude'); title('Binary Bit Stream'); subplot(4,1,2);
plot(t,TSIG);
axis([0 t(1000) -3 3]);
xlabel('time'); ylabel('Amplitude');
title('Signal Representation using Raised Cosine Signal'); subplot(4,1,3);
plot(t,NTSIG);
axis([0 t(1000) -3 3]);
xlabel('time'); ylabel('Amplitude'); title('Received Noisy Signal');
% Sample the received signal at mTb SAMP=[];
for k=1:100:length(NTSIG) samp=NTSIG(k);
SAMP=[SAMP samp zeros(1,99)];
end subplot(4,1,4);
plot(t,TSIG); hold;
axis([0 t(1000) -3 3]);
xlabel('time'); ylabel('Amplitude');
title('Sampled version of the Received Signal'); stem(t,SAMP);


fs=20;
fd=1;
pd=500;
x=randi(pd,1,2);
a=length(x);
delay=3;
rcv1=rcosflt(x,fd,fs,'fir/normal',0.2,delay);
rcv2=rcosflt(x,fd,fs,'fir/normal',0.4,delay);
rcv3=rcosflt(x,fd,fs,'fir/normal',0.6,delay);
rcv4=rcosflt(x,fd,fs,'fir/normal',0.8,delay);
n=fs/fd;
eyediagram(rcv1,n)
eyediagram(rcv2,n)
eyediagram(rcv3,n)
eyediagram(rcv4,n)


